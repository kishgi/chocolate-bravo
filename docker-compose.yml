version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./backend/uploads:/usr/share/nginx/html/uploads:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend1
      - backend2
      - backend3
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80

  backend1:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=8000
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
      - UPLOAD_PATH=${UPLOAD_PATH}
      - REDIS_URL=${REDIS_URL}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE}
      - ALLOWED_FILE_TYPES=${ALLOWED_FILE_TYPES}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - CORS_CREDENTIALS=${CORS_CREDENTIALS}
      - CORS_METHODS=${CORS_METHODS}
      - CORS_ALLOWED_HEADERS=${CORS_ALLOWED_HEADERS}
      - CORS_EXPOSED_HEADERS=${CORS_EXPOSED_HEADERS}
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      - mongodb
      - redis
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend2:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=8001
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
      - UPLOAD_PATH=${UPLOAD_PATH}
      - REDIS_URL=${REDIS_URL}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE}
      - ALLOWED_FILE_TYPES=${ALLOWED_FILE_TYPES}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - CORS_CREDENTIALS=${CORS_CREDENTIALS}
      - CORS_METHODS=${CORS_METHODS}
      - CORS_ALLOWED_HEADERS=${CORS_ALLOWED_HEADERS}
      - CORS_EXPOSED_HEADERS=${CORS_EXPOSED_HEADERS}
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      - mongodb
      - redis
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend3:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=8002
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_INITDB_DATABASE}?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
      - UPLOAD_PATH=${UPLOAD_PATH}
      - REDIS_URL=${REDIS_URL}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE}
      - ALLOWED_FILE_TYPES=${ALLOWED_FILE_TYPES}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - CORS_CREDENTIALS=${CORS_CREDENTIALS}
      - CORS_METHODS=${CORS_METHODS}
      - CORS_ALLOWED_HEADERS=${CORS_ALLOWED_HEADERS}
      - CORS_EXPOSED_HEADERS=${CORS_EXPOSED_HEADERS}
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      - mongodb
      - redis
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8002/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    restart: unless-stopped
    command: mongod --auth
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: 