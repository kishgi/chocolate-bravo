version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./backend/uploads:/usr/share/nginx/uploads:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      - redis
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./frontend/.env
    volumes:
      - ./frontend:/app
    networks:
      - app-network
    restart: unless-stopped

  # mongodb:
  #   image: mongo:latest
  #   env_file:
  #     - ./backend/.env
  #   volumes:
  #     - mongodb_data:/data/db
  #   networks:
  #     - app-network
  #   restart: unless-stopped
  #   command: mongod --auth
  #   healthcheck:
  #     test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--requirepass", "kishgi@1234"]
    env_file:
      - ./backend/.env
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "kishgi@1234", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: 